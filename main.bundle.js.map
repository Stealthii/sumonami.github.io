{"version":3,"sources":["webpack:///main.bundle.js","webpack:///webpack/bootstrap f05d883a857596d4ffaf","webpack:///./boot.js","webpack:///./js/main.js","webpack:///./js/config.js","webpack:///./js/states/startup.js","webpack:///./js/assets.js","webpack:///./js/states/_common.js","webpack:///./js/states/playfield.js","webpack:///./js/prefabs/ship.js","webpack:///./js/prefabs/ships.js","webpack:///./js/states/title.js","webpack:///./js/states/end.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Main","window","WebFontConfig","google","families","active","wf","document","createElement","src","type","async","s","getElementsByTagName","parentNode","insertBefore","game","Phaser","Game","CONFIG","gameSize","width","height","AUTO","k","States","state","add","start","Startup","PlayField","TitleState","EndState","stateAfterStartup","assetsPath","font","baseStyle","fill","stroke","strokeThickness","align","bigStyle","boundsAlignH","boundsAlignV","controlStyle","smallStyle","settings","Assets","_common","StartupState","prototype","preload","setGameScale","this","self","loaderText","text","anchor","setTo","progress","cacheKey","success","totalLoaded","totalFiles","console","log","updateText","toString","setText","physics","startSystem","Physics","ARCADE","create","preloadAssets","fileLoadedCallback","load","baseURL","onFileComplete","assets","images","forEach","item","image","spritesheets","spritesheet","sounds","audio","scale","scaleMode","ScaleManager","SHOW_ALL","pageAlignHorizontally","pageAlignVertically","Ship","Ships","PlayfieldState","roundEnded","audioPlayBgm","loopFull","audioBounce","audioSausageHit","audioSausageThrow","audioSplashSoft","audioSplashHard","audioWashedLast","audioWashed","init","numPlayers","curScores","fadeIn","renderer","clearBeforeRender","roundPixels","createBackground","createPlayers","endRound","fadeOut","play","i","ships","children","length","checkShip","alive","time","events","Timer","SECOND","update","arcade","collide","countLiving","water","tileSprite","animations","players","player1","control_names","forward","backward","left","right","fire1","fire2","initLoc","sprite","controls","input","keyboard","addKey","Keyboard","TWO","Q","ONE","W","F1","F2","player2","SIX","T","FIVE","Y","NINE","ZERO","player3","S","Z","A","X","SHIFT","CONTROL","player4","H","B","G","N","UNDERSCORE","EQUALS","player5","FOUR","E","THREE","R","F5","F6","player6","EIGHT","U","SEVEN","I","O","P","player7","F","C","D","V","F7","F8","player8","K","M","J","COMMA","OPEN_BRACKET","CLOSED_BRACKET","enable","playerinfo","x","y","Sprite","helptext","key","tween","to","alpha","Easing","Linear","In","set","enableBody","body","drag","maxVelocity","repel_max_range","repel_initial_vel","acceleration_increment","waveTime","waves","group","physicsBodyType","createMultiple","setAll","existing","bulletTime","bullets","checkWorldBounds","outOfBoundsKill","mass","bounce","stopVelocityOnCollide","Object","constructor","speed","isDown","velocity","angle","acceleration","onDown","fireBullet","fireWave","wee","getFirstAlive","forEachExists","scaleSprite","now","bullet","getFirstExists","reset","lifespan","velocityFromAngle","wave","rotation","velocityFromRotation","parent","repelShip","ship","dist","distanceBetween","ang","angleBetween","scaling_factor","scaled_velocity","render","increment","Group","len","audioBgm","audioTitle","audioSelect","audioStart","bg","startButton","SPACEBAR","getPlayerCount","subtext","setShadow","setTextBounds","filters","filter","twoButton","setNumPlayers","threeButton","fourButton","fiveButton","sixButton","sevenButton","eightButton","number","initTotals","wins","sausages","stop","Filter","Glow","fragmentSrc","scores","audioApplauseBgm","new_round","restart","printerText","concat","scoreText","yButton","nButton"],"mappings":"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","file":"main.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!*****************!*\\\n  !*** ./boot.js ***!\n  \\*****************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * boot.js\n\t * Entrypoint of the app. Initializes the main app.\n\t**/\n\t\n\tvar Main = __webpack_require__(/*! ./js/main */ 1);\n\t\n\twindow.WebFontConfig = {\n\t    google: {\n\t        families: [\n\t            'VT323::latin'\n\t        ]\n\t    },\n\t    active: function() {\n\t        new Main();\n\t    }\n\t};\n\t\n\tvar wf = document.createElement('script');\n\twf.src = '//ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';\n\twf.type = 'text/javascript';\n\twf.async = 'true';\n\tvar s = document.getElementsByTagName('script')[0];\n\ts.parentNode.insertBefore(wf, s);\n\n\n/***/ },\n/* 1 */\n/*!********************!*\\\n  !*** ./js/main.js ***!\n  \\********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * main.js\n\t**/\n\t\n\tvar CONFIG = __webpack_require__(/*! ./config */ 2);\n\t\n\tvar States = {\n\t    'Startup': __webpack_require__(/*! ./states/startup */ 3),\n\t    'PlayField': __webpack_require__(/*! ./states/playfield */ 6),\n\t    'TitleState': __webpack_require__(/*! ./states/title */ 9),\n\t    'EndState': __webpack_require__(/*! ./states/end */ 10)\n\t};\n\t\n\t/**\n\t * Main app. Little more than a bootstrap - the\n\t * game logic resides in the various states.\n\t**/\n\tfunction Main() {\n\t    // Create a new game\n\t    var game = new Phaser.Game(\n\t        CONFIG.gameSize.width,\n\t        CONFIG.gameSize.height,\n\t        Phaser.AUTO\n\t    );\n\t\n\t    for(var k in States) {\n\t        game.state.add(k, States[k]);\n\t    }\n\t\n\t\n\t    game.state.start('Startup');\n\t}\n\t\n\tmodule.exports = Main;\n\n\n/***/ },\n/* 2 */\n/*!**********************!*\\\n  !*** ./js/config.js ***!\n  \\**********************/\n/***/ function(module, exports) {\n\n\t/**\n\t * config.js\n\t * Configuration object that gets passed around the app\n\t * for convenience.\n\t**/\n\t\n\tvar CONFIG = {\n\t\n\t    stateAfterStartup: 'TitleState',\n\t\n\t    // Pixel size of the Phaser canvas.\n\t    // (Canvas itself is scaled to viewport)\n\t    gameSize: {\n\t        width: 1365,\n\t        height: 768\n\t    },\n\t\n\t    assetsPath: \"/assets/\",\n\t\n\t    // Font style definitions\n\t    font: {\n\t        // Generic/default text\n\t        baseStyle: {\n\t            font: '24px VT323',\n\t            fill: '#caa',\n\t            stroke: '#000',\n\t            strokeThickness: 1,\n\t            align: 'center'\n\t        },\n\t        bigStyle: {\n\t            font: '48px VT323',\n\t            fill: '#caa',\n\t            stroke: '#000',\n\t            strokeThickness: 1,\n\t            boundsAlignH: \"center\",\n\t            boundsAlignV: \"bottom\"\n\t        },\n\t        controlStyle: {\n\t            font: '48px VT323',\n\t            fill: '#fff',\n\t            stroke: '#000',\n\t            strokeThickness: 1,\n\t            boundsAlignH: \"center\",\n\t            boundsAlignV: \"bottom\"\n\t        },\n\t\n\t        smallStyle: {\n\t            font: '18px VT323',\n\t            fill: '#c8a',\n\t            stroke: '#000',\n\t            strokeThickness: 1,\n\t            align: 'center'\n\t        }\n\t    },\n\t\n\t    // Game settings\n\t    settings: {\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = CONFIG;\n\n\n/***/ },\n/* 3 */\n/*!******************************!*\\\n  !*** ./js/states/startup.js ***!\n  \\******************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * startup.js\n\t * Initial state of the game when loaded.\n\t * Handles asset preloading, game setup, loader graphic, etc.\n\t**/\n\tvar Assets = __webpack_require__(/*! ../assets */ 4);\n\tvar CONFIG = __webpack_require__(/*! ../config */ 2);\n\tvar _common = __webpack_require__(/*! ./_common */ 5);\n\t\n\tvar StartupState = function() {\n\t};\n\t\n\t\n\tStartupState.prototype.preload = function() {\n\t    _common.setGameScale(this.game);\n\t    var self = this;\n\t\n\t    self.loaderText = self.add.text(\n\t        self.game.width - 40,\n\t        self.game.height - 40,\n\t        '...',\n\t        CONFIG.font.smallStyle);\n\t    self.loaderText.anchor.setTo(1,1);\n\t\n\t    Assets.preload(self, function(progress, cacheKey, success, totalLoaded, totalFiles) {\n\t        console.log('preload', progress, cacheKey, totalLoaded, totalFiles);\n\t\n\t        var updateText = progress.toString() + '% - LOADING...';\n\t        self.loaderText.setText(updateText);\n\t    });\n\t\n\t    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n\t};\n\t\n\tStartupState.prototype.create = function() {\n\t    var self = this;\n\t    self.game.state.start(CONFIG.stateAfterStartup);\n\t};\n\t\n\tmodule.exports = StartupState;\n\n\n/***/ },\n/* 4 */\n/*!**********************!*\\\n  !*** ./js/assets.js ***!\n  \\**********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CONFIG = __webpack_require__(/*! ./config */ 2);\n\t\n\t/**\n\t * assets.js\n\t * List of required project assets and some simple logic\n\t * for preloading them in Phaser.\n\t * Used during the Startup state to preload and report on all\n\t * required assets - we do this upfront to prevent pauses/delays\n\t * during the game.\n\t**/\n\t\n\t// Object list of assets to preload\n\tvar assets = {\n\t\n\t    // images are standard image files.\n\t    // Format is [key, path]\n\t    images: [\n\t        ['player1', 'images/player1.png'],\n\t        ['player2', 'images/player2.png'],\n\t        ['player3', 'images/player3.png'],\n\t        ['player4', 'images/player4.png'],\n\t        ['player5', 'images/player5.png'],\n\t        ['player6', 'images/player6.png'],\n\t        ['player7', 'images/player7.png'],\n\t        ['player8', 'images/player8.png'],\n\t        ['bullet', 'images/bullet1.png'],\n\t        ['dog-bullet', 'images/dog-bullet.png'],\n\t        ['space', 'images/deepblue.png'],\n\t        ['wave', 'images/blue_circle.png'],\n\t        ['titleText', 'images/titleText.png'],\n\t        ['titleBackground', 'images/titleBackground.png']\n\t    ],\n\t    spritesheets: [\n\t        ['water', 'spritesheets/water.png', 256, 256]\n\t    ],\n\t    // Audio files to load\n\t    sounds: [\n\t        ['bgm-applause', ['audio/bgm-applause.mp3',\n\t                          'audio/bgm-applause.opus']\n\t        ],\n\t        ['bgm-playfield', ['audio/bgm-playfield.mp3',\n\t                           'audio/bgm-playfield.opus']\n\t        ],\n\t        ['bgm-title', ['audio/bgm-title.mp3',\n\t                       'audio/bgm-title.opus']\n\t        ],\n\t        ['sfx-bounce', ['audio/sfx-bounce.mp3',\n\t                        'audio/sfx-bounce.opus']\n\t        ],\n\t        ['sfx-sausagehit', ['audio/sfx-sausagehit.mp3',\n\t                            'audio/sfx-sausagehit.opus']\n\t        ],\n\t        ['sfx-sausagethrow', ['audio/sfx-sausagethrow.mp3',\n\t                              'audio/sfx-sausagethrow.opus']\n\t        ],\n\t        ['sfx-select', ['audio/sfx-select.mp3',\n\t                        'audio/sfx-select.opus']\n\t        ],\n\t        ['sfx-slashsoft', ['audio/sfx-slashsoft.mp3',\n\t                           'audio/sfx-slashsoft.opus']\n\t        ],\n\t        ['sfx-splashhard', ['audio/sfx-splashhard.mp3',\n\t                            'audio/sfx-splashhard.opus']\n\t        ],\n\t        ['sfx-startgame', ['audio/sfx-startgame.mp3',\n\t                           'audio/sfx-startgame.opus']\n\t        ],\n\t        ['sfx-washed-last', ['audio/sfx-washed-last.mp3',\n\t                             'audio/sfx-washed-last.opus']\n\t        ],\n\t        ['sfx-washed', ['audio/sfx-washed.mp3',\n\t                        'audio/sfx-washed.opus']\n\t        ],\n\t        ['voice-gameover1', ['audio/voice-gameover1.mp3',\n\t                             'audio/voice-gameover1.opus']\n\t        ],\n\t        ['voice-gameover2', ['audio/voice-gameover2.mp3',\n\t                             'audio/voice-gameover2.opus']\n\t        ],\n\t        ['voice-gameover3', ['audio/voice-gameover3.mp3',\n\t                             'audio/voice-gameover3.opus']\n\t        ],\n\t        ['voice-ohNo', ['audio/voice-ohNo.mp3',\n\t                        'audio/voice-ohNo.opus']\n\t        ],\n\t        ['voice-pleasewait', ['audio/voice-pleasewait.mp3',\n\t                              'audio/voice-pleasewait.opus']\n\t        ],\n\t        ['voice-pleasewait2', ['audio/voice-pleasewait2.mp3',\n\t                               'audio/voice-pleasewait2.opus']\n\t        ],\n\t        ['voice-seeyoulater', ['audio/voice-seeyoulater.mp3',\n\t                               'audio/voice-seeyoulater.opus']\n\t        ],\n\t        ['voice-seeyoulater2', ['audio/voice-seeyoulater2.mp3',\n\t                                'audio/voice-seeyoulater2.opus']\n\t        ],\n\t        ['voice-stupidForeigner', ['audio/voice-stupidForeigner.mp3',\n\t                                   'audio/voice-stupidForeigner.opus']\n\t        ],\n\t        ['voice-sumonami', ['audio/voice-sumonami.mp3',\n\t                            'audio/voice-sumonami.opus']\n\t        ],\n\t        ['voice-sumonami2', ['audio/voice-sumonami2.mp3',\n\t                             'audio/voice-sumonami2.opus']\n\t        ],\n\t        ['voice-sumonami3', ['audio/voice-sumonami3.mp3',\n\t                             'audio/voice-sumonami3.opus']\n\t        ],\n\t        ['voice-sumonami4', ['audio/voice-sumonami4.mp3',\n\t                             'audio/voice-sumonami4.opus']\n\t        ]\n\t    ]\n\t};\n\t\n\t/**\n\t * Calls Phaser's load functions on the assets list and fires a callback\n\t * when each one completes.\n\t * @param game - reference to Phaser.Game instance\n\t * @param fileLoadedCallback - function to fire when *each* file loads\n\t**/\n\tfunction preloadAssets(game, fileLoadedCallback) {\n\t    game.load.baseURL = CONFIG.assetsPath;\n\t\n\t    game.load.onFileComplete.add(fileLoadedCallback, this);\n\t\n\t    console.log('Preloading images...');\n\t    assets.images.forEach(function(item) {\n\t        game.load.image(item[0], item[1]);\n\t    });\n\t\n\t    console.log('Preloading spritesheets...');\n\t    assets.spritesheets.forEach(function(item) {\n\t        game.load.spritesheet(item[0], item[1], item[2], item[3]);\n\t    });\n\t\n\t    console.log('Preloading sounds...');\n\t    assets.sounds.forEach(function(item) {\n\t        game.load.audio(item[0], item[1]);\n\t    });\n\t\n\t    game.load.start();\n\t\n\t}\n\t\n\tmodule.exports = {\n\t    assets: assets,\n\t    preload: preloadAssets\n\t};\n\n\n/***/ },\n/* 5 */\n/*!******************************!*\\\n  !*** ./js/states/_common.js ***!\n  \\******************************/\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t    setGameScale: function(game) {\n\t        // Ensure the scaling mode of the game is properly set.\n\t        game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n\t        game.scale.pageAlignHorizontally = true;\n\t        game.scale.pageAlignVertically = true;\n\t    }\n\t};\n\n\n/***/ },\n/* 6 */\n/*!********************************!*\\\n  !*** ./js/states/playfield.js ***!\n  \\********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CONFIG = __webpack_require__(/*! ../config */ 2);\n\tvar _common = __webpack_require__(/*! ./_common */ 5);\n\tvar Ship = __webpack_require__(/*! ../prefabs/ship */ 7);\n\tvar Ships = __webpack_require__(/*! ../prefabs/ships */ 8);\n\t\n\t\n\t\n\tvar PlayfieldState = function() {\n\t    this.roundEnded = false;\n\t};\n\t\n\tPlayfieldState.prototype.preload = function() {\n\t    _common.setGameScale(this.game);\n\t    this.audioPlayBgm = this.game.add.audio('bgm-playfield');\n\t    this.audioPlayBgm.loopFull();\n\t    this.audioBounce = this.game.add.audio('sfx-bounce');\n\t    this.audioSausageHit = this.game.add.audio('sfx-sausagehit');\n\t    this.audioSausageThrow = this.game.add.audio('sfx-sausagethrow');\n\t    this.audioSplashSoft = this.game.add.audio('sfx-slashsoft');\n\t    this.audioSplashHard = this.game.add.audio('sfx-splashhard');\n\t    this.audioWashedLast = this.game.add.audio('sfx-washed-last');\n\t    this.audioWashed = this.game.add.audio('sfx-washed');\n\t};\n\t\n\tPlayfieldState.prototype.init = function(numPlayers, curScores) {\n\t    console.log(\"PLAY FIELD INIT\");\n\t    this.numPlayers = numPlayers;\n\t    this.curScores = curScores;\n\t    this.roundEnded = false;\n\t    _common.setGameScale(this.game);\n\t};\n\t\n\t\n\tPlayfieldState.prototype.create = function(game) {\n\t    this.audioPlayBgm.fadeIn(2000);\n\t    console.log(\"PLAY FIELD, numPlayers: \"+this.numPlayers);\n\t    var state = this;\n\t\n\t    //  This will run in Canvas mode, so let's gain a little speed and display\n\t    state.game.renderer.clearBeforeRender = false;\n\t    state.game.renderer.roundPixels = true;\n\t\n\t    //  We need arcade physics\n\t    state.game.physics.startSystem(Phaser.Physics.ARCADE);\n\t\n\t    this.createBackground();\n\t    this.createPlayers(state.numPlayers);\n\t\n\t};\n\t\n\tPlayfieldState.prototype.endRound = function() {\n\t    this.roundEnded = true;\n\t    this.audioPlayBgm.fadeOut(1800);\n\t    this.audioWashedLast.play();\n\t    console.log(\"Round over!\");\n\t    for (var i = 1; i <= this.ships.children.length; i++) {\n\t        var checkShip = this.ships.children[(i - 1)];\n\t        if (checkShip.alive) {\n\t            console.log(\"player \"+ i + \" won!\");\n\t            this.curScores[\"player\"+i][\"wins\"] += 1;\n\t        }\n\t    }\n\t    var self = this;\n\t    this.game.time.events.add(Phaser.Timer.SECOND * 2, function() {\n\t        self.game.state.start(\"EndState\", true, false, self.numPlayers, self.curScores);\n\t    });\n\t\n\t};\n\t\n\tPlayfieldState.prototype.update = function() {\n\t    var self = this;\n\t    self.game.physics.arcade.collide(self.ships);\n\t    if (!self.roundEnded) {\n\t        if (self.ships.countLiving() == 1 ) {\n\t            self.endRound();\n\t        }\n\t    }\n\t};\n\t\n\tPlayfieldState.prototype.createBackground = function() {\n\t    var state = this;\n\t    //  Watery backdrop\n\t    var water = state.game.add.tileSprite(0, 0, state.game.width, state.game.height, 'water');\n\t    var ripple = water.animations.add('ripple');\n\t    water.animations.play('ripple', 6, true);\n\t};\n\t\n\tPlayfieldState.prototype.createPlayers = function(numPlayers) {\n\t    var state = this;\n\t    var players = {\n\t        player1: {\n\t            control_names: {\n\t                forward: \"2\",\n\t                backward:\"Q\",\n\t                left:\"1\",\n\t                right:\"W\",\n\t                fire1:\"F1\",\n\t                fire2:\"F2\"\n\t            },\n\t            initLoc: [350, 200],\n\t            sprite: 'player1',\n\t            controls: {\n\t                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.TWO),\n\t                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.Q),\n\t                left: state.game.input.keyboard.addKey(Phaser.Keyboard.ONE),\n\t                right: state.game.input.keyboard.addKey(Phaser.Keyboard.W),\n\t                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.F1),\n\t                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.F2)\n\t            },\n\t            image: 'player1'\n\t        },\n\t        player2: {\n\t            control_names: {\n\t                forward:\"6\",\n\t                backward:\"T\",\n\t                left:\"5\",\n\t                right:\"Y\",\n\t                fire1:\"9\",\n\t                fire2:\"0\"\n\t            },\n\t            initLoc: [750, 200],\n\t            sprite: 'player2',\n\t            controls: {\n\t                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.SIX),\n\t                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.T),\n\t                left: state.game.input.keyboard.addKey(Phaser.Keyboard.FIVE),\n\t                right: state.game.input.keyboard.addKey(Phaser.Keyboard.Y),\n\t                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.NINE),\n\t                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.ZERO)\n\t            },\n\t            image: 'player2'\n\t        },\n\t        player3: {\n\t            control_names: {\n\t                forward:\"S\",\n\t                backward:\"Z\",\n\t                left:\"A\",\n\t                right:\"X\",\n\t                fire1:\"SHIFT\",\n\t                fire2:\"Ctrl\"\n\t            },\n\t            initLoc: [350, 600],\n\t            sprite: 'player3',\n\t            controls: {\n\t                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.S),\n\t                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.Z),\n\t                left: state.game.input.keyboard.addKey(Phaser.Keyboard.A),\n\t                right: state.game.input.keyboard.addKey(Phaser.Keyboard.X),\n\t                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.SHIFT),\n\t                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.CONTROL)\n\t            },\n\t            image: 'player3'\n\t        },\n\t        player4: {\n\t            control_names: {\n\t                forward:\"H\",\n\t                backward:\"B\",\n\t                left:\"G\",\n\t                right:\"N\",\n\t                fire1:\"_\",\n\t                fire2:\"=\"\n\t            },\n\t            initLoc: [750, 600],\n\t            sprite: 'player4',\n\t            controls: {\n\t                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.H),\n\t                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.B),\n\t                left: state.game.input.keyboard.addKey(Phaser.Keyboard.G),\n\t                right: state.game.input.keyboard.addKey(Phaser.Keyboard.N),\n\t                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.UNDERSCORE),\n\t                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.EQUALS)\n\t            },\n\t            image: 'player4'\n\t        },\n\t        player5: {\n\t            control_names: {\n\t                forward:\"4\",\n\t                backward:\"E\",\n\t                left:\"3\",\n\t                right:\"R\",\n\t                fire1:\"F5\",\n\t                fire2:\"F6\"\n\t            },\n\t            initLoc: [550, 200],\n\t            sprite: 'player5',\n\t            controls: {\n\t                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.FOUR),\n\t                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.E),\n\t                left: state.game.input.keyboard.addKey(Phaser.Keyboard.THREE),\n\t                right: state.game.input.keyboard.addKey(Phaser.Keyboard.R),\n\t                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.F5),\n\t                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.F6)\n\t            },\n\t            image: 'player5'\n\t        },\n\t        player6: {\n\t            control_names: {\n\t                forward:\"8\",\n\t                backward:\"U\",\n\t                left:\"7\",\n\t                right:\"I\",\n\t                fire1:\"O\",\n\t                fire2:\"P\"\n\t            },\n\t            initLoc: [950, 200],\n\t            sprite: 'player6',\n\t            controls: {\n\t                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.EIGHT),\n\t                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.U),\n\t                left: state.game.input.keyboard.addKey(Phaser.Keyboard.SEVEN),\n\t                right: state.game.input.keyboard.addKey(Phaser.Keyboard.I),\n\t                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.O),\n\t                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.P)\n\t            },\n\t            image: 'player6'\n\t        },\n\t        player7: {\n\t            control_names: {\n\t                forward:\"F\",\n\t                backward:\"C\",\n\t                left:\"D\",\n\t                right:\"V\",\n\t                fire1:\"F7\",\n\t                fire2:\"F8\"\n\t            },\n\t            initLoc: [550, 600],\n\t            sprite: 'player7',\n\t            controls: {\n\t                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.F),\n\t                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.C),\n\t                left: state.game.input.keyboard.addKey(Phaser.Keyboard.D),\n\t                right: state.game.input.keyboard.addKey(Phaser.Keyboard.V),\n\t                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.F7),\n\t                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.F8)\n\t            },\n\t            image: 'player7'\n\t        },\n\t        player8: {\n\t            control_names: {\n\t                forward:\"K\",\n\t                backward:\"M\",\n\t                left:\"J\",\n\t                right:\",\",\n\t                fire1:\"{\",\n\t                fire2:\"}\"\n\t            },\n\t            initLoc: [950, 600],\n\t            sprite: 'player8',\n\t            controls: {\n\t                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.K),\n\t                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.M),\n\t                left: state.game.input.keyboard.addKey(Phaser.Keyboard.J),\n\t                right: state.game.input.keyboard.addKey(Phaser.Keyboard.COMMA),\n\t                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.OPEN_BRACKET),\n\t                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.CLOSED_BRACKET)\n\t            },\n\t            image: 'player8'\n\t        }\n\t    };\n\t\n\t    state.ships = new Ships(state);\n\t    if (numPlayers > 4) numPlayers == 4;\n\t    for (var i = 1; i <= numPlayers; i++) {\n\t        state.ships.add(new Ship(state, players[\"player\" + i]));\n\t        console.log(\"player\" + i + \"created\");\n\t    }\n\t\n\t    state.game.physics.enable(state.ships, Phaser.Physics.ARCADE);\n\t};\n\t\n\tmodule.exports = PlayfieldState;\n\n\n/***/ },\n/* 7 */\n/*!****************************!*\\\n  !*** ./js/prefabs/ship.js ***!\n  \\****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CONFIG = __webpack_require__(/*! ../config */ 2);\n\t\n\tvar Ship = function(state, playerinfo) {\n\t    var x = playerinfo.initLoc[0];\n\t    var y = playerinfo.initLoc[1];\n\t    var controls = playerinfo.controls;\n\t    var image = playerinfo.image;\n\t    this.state = state;\n\t\n\t    // instantiate object\n\t    Phaser.Sprite.call(this, state.game, x, y, image);\n\t    // constants\n\t    this.x = x;\n\t    this.y = y;\n\t    var helptext = (this.key + \"\\n\"\n\t                    + playerinfo.control_names.forward + \" \"\n\t                    + playerinfo.control_names.backward + \" \"\n\t                    + playerinfo.control_names.left + \" \"\n\t                    + playerinfo.control_names.right + \"\\n\"\n\t                    + playerinfo.control_names.fire1 + \" \"\n\t                    + playerinfo.control_names.fire2);\n\t\n\t    console.log(helptext);\n\t    this.helptext = this.game.add.text(x,y,helptext, CONFIG.font.controlStyle);\n\t    this.game.add.tween(this.helptext).to({ alpha: 0.0  }, 6000, Phaser.Easing.Linear.In).start();\n\t    console.log(this);\n\t\n\t    this.controls = controls;\n\t    this.anchor.set(0.5);\n\t\n\t    //physics\n\t    state.game.physics.enable(this, Phaser.Physics.ARCADE);\n\t    this.enableBody = true;\n\t    this.body.drag.set(100);\n\t    this.body.maxVelocity.set(800);\n\t    // this.body.collideWorldBounds=true;\n\t    // this.body.bounce.y=0.2;\n\t    // this.body.bounce.x=0.2;\n\t    // this.repel_scaling_factor=0.8;\n\t    this.repel_max_range=300;\n\t    this.repel_initial_vel=350;\n\t\n\t    // Rate of acceleration on keypress, don't confuse with this.body.acceleration!\n\t    this.acceleration_increment=40;\n\t\n\t    // TODO: move to Ship.addWaves?\n\t    // Add before the ship so they're under the sprite\n\t    this.waveTime = 0;\n\t    this.waves = this.game.add.group();\n\t    this.waves.enableBody = true;\n\t    this.waves.physicsBodyType = Phaser.Physics.ARCADE;\n\t    this.waves.createMultiple(3, 'wave');\n\t    this.waves.setAll('anchor.x', 0.5);\n\t    this.waves.setAll('anchor.y', 0.5);\n\t\n\t    // add to canvas and log\n\t    state.game.add.existing(this);\n\t\n\t    this.bulletTime = 0;\n\t    this.bullets = this.game.add.group();\n\t    this.bullets.enableBody = true;\n\t    this.bullets.physicsBodyType = Phaser.Physics.ARCADE;\n\t    this.bullets.createMultiple(2, 'dog-bullet');\n\t    this.bullets.setAll('anchor.x', 0.5);\n\t    this.bullets.setAll('anchor.y', 0.5);\n\t\n\t    //Collision stuff\n\t    this.checkWorldBounds = true;\n\t    this.outOfBoundsKill = true;\n\t    this.body.mass = 100;\n\t    this.body.bounce.set(1);\n\t    this.body.stopVelocityOnCollide = true;\n\t\n\t    console.log(this.bounce);\n\t\n\t};\n\t\n\tShip.prototype = Object.create(Phaser.Sprite.prototype);\n\t\n\tShip.prototype.constructor = Ship;\n\t\n\tShip.prototype.update = function() {\n\t    this.speed = 10;\n\t    if (this.controls.forward.isDown) {\n\t        this.body.velocity.y -= this.speed;\n\t        this.angle = 180;\n\t    } else if (this.controls.backward.isDown) {\n\t        this.body.velocity.y += this.speed;\n\t        this.angle = 360;\n\t    } else\n\t    { this.body.acceleration.set(0); }\n\t\n\t    if (this.controls.left.isDown) {\n\t        this.body.velocity.x -= this.speed;\n\t        this.angle = 90;\n\t    }\n\t    else if (this.controls.right.isDown) {\n\t        this.body.velocity.x += this.speed;\n\t        this.angle = 270;\n\t    }\n\t    this.controls.fire1.onDown.add(this.fireBullet, this);\n\t    this.controls.fire2.onDown.add(this.fireWave, this);\n\t\n\t    // Dog spin\n\t    this.bullets.setAll('angle', 10, false, false, 1);\n\t    // Make first spin faster for the lulz\n\t    var wee = this.bullets.getFirstAlive();\n\t    if (wee) wee.angle += 10;\n\t\n\t    this.waves.forEachExists(this.scaleSprite, this, 0.05);\n\t};\n\t\n\tShip.prototype.fireBullet = function () {\n\t    if (this.alive) {\n\t        if (this.game.time.now > this.bulletTime)\n\t        {\n\t            this.bullet = this.bullets.getFirstExists(false);\n\t\n\t            if (this.bullet)\n\t            {\n\t                this.bullet.scale.setTo(0.3);\n\t                this.bullet.reset(this.body.x + 16, this.body.y + 16);\n\t                this.bullet.lifespan = 2000;\n\t                this.bullet.angle = this.angle + 90;\n\t                this.game.physics.arcade.velocityFromAngle(this.bullet.angle, 400, this.bullet.body.velocity);\n\t                this.bulletTime = this.game.time.now + 50;\n\t                this.state.curScores[this.key][\"sausages\"] += 1;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tShip.prototype.fireWave = function() {\n\t    if (this.alive) {\n\t        if (this.game.time.now > this.waveTime) {\n\t            var wave = this.waves.getFirstExists(false);\n\t\n\t            if (wave)\n\t            {\n\t                wave.rotation = this.rotation;\n\t                this.game.physics.arcade.velocityFromRotation(0, 0, 0);\n\t                this.waveTime = this.game.time.now + 50;\n\t\n\t                wave.reset(this.body.x + this.body.width/2, this.body.y + this.body.height/2);\n\t                wave.scale.setTo(0.1);\n\t                wave.alpha = 1;\n\t                wave.lifespan = 2000;\n\t                wave.rotation = this.rotation;\n\t                this.game.physics.arcade.velocityFromRotation(0, 0, 0);\n\t                //The number is the delay between shots\n\t                this.waveTime = this.game.time.now + 200;\n\t\n\t                this.parent.forEachExists(this.repelShip, this);\n\t                this.game.add.tween(this.scale)\n\t                    .to({x: 0.8, y:0.8}, 200, Phaser.Easing.Linear.In)\n\t                    .to({x: 1.2, y:1.2}, 200, Phaser.Easing.Linear.In)\n\t                    .to({x: 1.0, y:1.0}, 200, Phaser.Easing.Linear.In)\n\t                    .start();\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tShip.prototype.repelShip = function (ship) {\n\t    var dist = this.game.physics.arcade.distanceBetween(ship, this);\n\t    var ang = this.game.physics.arcade.angleBetween(ship, this);\n\t\n\t    if (dist < this.repel_max_range && dist != 0)\n\t    {\n\t        var scaling_factor = ( (this.repel_max_range - dist) / this.repel_max_range);\n\t        console.log(\"dist:\"+dist+\", factor:\"+scaling_factor+\", scaled:\"+scaled_velocity);\n\t\n\t        var scaled_velocity = (-1 * this.repel_initial_vel * scaling_factor); // scale down\n\t        ship.game.physics.arcade.velocityFromRotation(ang, scaled_velocity, ship.body.velocity);\n\t    }\n\t    else {\n\t        console.log(\"out of range!\");\n\t    }\n\t};\n\t\n\tShip.prototype.render = function (){\n\t}\n\t\n\tShip.prototype.scaleSprite = function (sprite, increment){\n\t        sprite.scale.setTo(sprite.scale.x + increment);\n\t        sprite.alpha -= 0.01;\n\t    };\n\t\n\t\n\tmodule.exports = Ship;\n\n\n/***/ },\n/* 8 */\n/*!*****************************!*\\\n  !*** ./js/prefabs/ships.js ***!\n  \\*****************************/\n/***/ function(module, exports) {\n\n\t\n\t'use strict';\n\t\n\tvar Ships = function (state) {\n\t    Phaser.Group.call(this, state.game);\n\t};\n\t\n\t//Documentation for Phaser's (2.6.2) group:: phaser.io/docs/2.6.2/Phaser.Group.html\n\tShips.prototype = Object.create(Phaser.Group.prototype);\n\t\n\t// prefab initialization and construction\n\tShips.prototype.constructor = Ships;\n\t\n\t// Update needed, called automatically by phaser as it's a child of the state.\n\tShips.prototype.update = function() {\n\t    for (var i = 0, len = this.children.length; i < len; i++) {\n\t        this.children[i].update();\n\t    }\n\t};\n\t\n\tmodule.exports = Ships;\n\n\n/***/ },\n/* 9 */\n/*!****************************!*\\\n  !*** ./js/states/title.js ***!\n  \\****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * title.js\n\t * State for the game title screen.\n\t**/\n\t'use strict';\n\tvar CONFIG = __webpack_require__(/*! ../config */ 2);\n\tvar _common = __webpack_require__(/*! ./_common */ 5);\n\t\n\tvar TitleState = function() {};\n\t\n\tTitleState.prototype.preload = function() {\n\t    _common.setGameScale(this.game);\n\t    this.audioBgm = this.game.add.audio('bgm-title');\n\t    this.audioTitle = this.game.add.audio('voice-sumonami');\n\t    this.audioSelect = this.game.add.audio('sfx-select');\n\t    this.audioStart = this.game.add.audio('sfx-startgame');\n\t};\n\t\n\tTitleState.prototype.create = function() {\n\t    var state = this;\n\t\n\t    this.bg = this.game.add.tileSprite(0, 0, this.game.width, this.game.height, 'titleBackground');\n\t    this.text = this.game.add.sprite(0, 0, 'titleText');\n\t    this.text.anchor.set(0.5);\n\t    this.text.x = this.game.width / 2;\n\t    this.text.y = this.game.height / 2;\n\t    this.startButton = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n\t    this.startButton.onDown.add(this.getPlayerCount, this);\n\t\n\t    this.audioTitle.play();\n\t    this.audioBgm.play();\n\t\n\t    this.subtext = this.game.add.text(0, 0, \"CHALLENGER PRESSES SPACEBAH!!\", CONFIG.font.bigStyle);\n\t    this.subtext.setShadow(3, 3, 'rgba(0,0,0,0.5)', 2);\n\t    this.subtext.setTextBounds(0,0,this.game.width,(this.game.height-40));\n\t\n\t    this.text.filters = [ this.game.add.filter('Glow')  ];\n\t\n\t    this.game.add.tween(this.text)\n\t            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n\t            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n\t            .start();\n\t\n\t    // function sleep(ms) {\n\t    //       return new Promise(resolve => setTimeout(resolve, ms));\n\t    // }\n\t\n\t    // for (var i = 0; i < 100; i++) {\n\t    //     //await sleep(2000);\n\t    //     //this.text.body.x = i;\n\t    // }\n\t\n\t};\n\tTitleState.prototype.getPlayerCount = function () {\n\t\n\t    this.audioSelect.play();\n\t\n\t    this.subtext.setText(\"How many players (2-8)?\");\n\t    this.twoButton = this.game.input.keyboard.addKey(Phaser.Keyboard.TWO);\n\t    this.twoButton.onDown.add(this.setNumPlayers, this, this, 2);\n\t    this.threeButton = this.game.input.keyboard.addKey(Phaser.Keyboard.THREE);\n\t    this.threeButton.onDown.add(this.setNumPlayers, this, this, 3);\n\t    this.fourButton = this.game.input.keyboard.addKey(Phaser.Keyboard.FOUR);\n\t    this.fourButton.onDown.add(this.setNumPlayers, this, this, 4);\n\t    this.fiveButton = this.game.input.keyboard.addKey(Phaser.Keyboard.FIVE);\n\t    this.fiveButton.onDown.add(this.setNumPlayers, this, this, 5);\n\t    this.sixButton = this.game.input.keyboard.addKey(Phaser.Keyboard.SIX);\n\t    this.sixButton.onDown.add(this.setNumPlayers, this, this, 6);\n\t    this.sevenButton = this.game.input.keyboard.addKey(Phaser.Keyboard.SEVEN);\n\t    this.sevenButton.onDown.add(this.setNumPlayers, this, this, 7);\n\t    this.eightButton = this.game.input.keyboard.addKey(Phaser.Keyboard.EIGHT);\n\t    this.eightButton.onDown.add(this.setNumPlayers, this, this, 8);\n\t};\n\t\n\tTitleState.prototype.setNumPlayers = function (state, number) {\n\t    console.log(\"setNumPlayers:\"+number+\" pressed!\");\n\t    var  initTotals= {\n\t        player1: {\n\t            wins: 0,\n\t            sausages: 0,\n\t        },\n\t        player2: {\n\t            wins: 0,\n\t            sausages: 0,\n\t        },\n\t        player3: {\n\t            wins: 0,\n\t            sausages: 0,\n\t        },\n\t        player4: {\n\t            wins: 0,\n\t            sausages: 0,\n\t        },\n\t        player5: {\n\t            wins: 0,\n\t            sausages: 0,\n\t        },\n\t        player6: {\n\t            wins: 0,\n\t            sausages: 0,\n\t        },\n\t        player7: {\n\t            wins: 0,\n\t            sausages: 0,\n\t        },\n\t        player8: {\n\t            wins: 0,\n\t            sausages: 0,\n\t        }\n\t    };\n\t\n\t    this.audioBgm.stop();\n\t    this.audioStart.play();\n\t    var self = this;\n\t    this.game.time.events.add(Phaser.Timer.SECOND * 2, function() {\n\t        self.state.start(\"PlayField\", true, false, number, initTotals);\n\t    });\n\t};\n\t\n\tPhaser.Filter.Glow = function (game) {\n\t        Phaser.Filter.call(this, game);\n\t\n\t    this.fragmentSrc = [\n\t                \"precision lowp float;\",\n\t                \"varying vec2 vTextureCoord;\",\n\t                \"varying vec4 vColor;\",\n\t                'uniform sampler2D uSampler;',\n\t\n\t                'void main() {',\n\t                    'vec4 sum = vec4(0);',\n\t                    'vec2 texcoord = vTextureCoord;',\n\t                    'for(int xx = -4; xx <= 4; xx++) {',\n\t                        'for(int yy = -3; yy <= 3; yy++) {',\n\t                            'float dist = sqrt(float(xx*xx) + float(yy*yy));',\n\t                            'float factor = 0.0;',\n\t                            'if (dist == 0.0) {',\n\t                                'factor = 2.0;',\n\t                            '} else {',\n\t                                'factor = 2.0/abs(float(dist));',\n\t                            '}',\n\t                            'sum += texture2D(uSampler, texcoord + vec2(xx, yy) * 0.002) * factor;',\n\t                        '}',\n\t                    '}',\n\t                    'gl_FragColor = sum * 0.025 + texture2D(uSampler, texcoord);',\n\t                '}'\n\t\n\t    ];\n\t\n\t};\n\t\n\tPhaser.Filter.Glow.prototype = Object.create(Phaser.Filter.prototype);\n\tPhaser.Filter.Glow.prototype.constructor = Phaser.Filter.Glow;\n\t\n\t\n\t\n\tmodule.exports = TitleState;\n\n\n/***/ },\n/* 10 */\n/*!**************************!*\\\n  !*** ./js/states/end.js ***!\n  \\**************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * end.js\n\t * State for the game end screen.\n\t**/\n\t'use strict';\n\tvar CONFIG = __webpack_require__(/*! ../config */ 2);\n\tvar _common = __webpack_require__(/*! ./_common */ 5);\n\t\n\tvar EndState = function() {};\n\t\n\tEndState.prototype.init = function(numPlayers, scores) {\n\t    console.log(\"END INIT\");\n\t    this.numPlayers = numPlayers;\n\t    this.scores = scores;\n\t    console.log(this);\n\t\n\t}\n\t\n\tEndState.prototype.preload = function() {\n\t    _common.setGameScale(this.game);\n\t    this.audioApplauseBgm = this.game.add.audio('bgm-applause');\n\t};\n\tEndState.prototype.new_round = function() {\n\t    console.log(\"NEW ROUND\");\n\t    this.state.start(\"PlayField\", true, false, this.numPlayers, this.scores);\n\t\n\t};\n\t\n\tEndState.prototype.restart = function(state, numPlayers) {\n\t\n\t    this.state.start(\"TitleState\", true, false );\n\t\n\t};\n\t\n\tEndState.prototype.create = function() {\n\t    this.audioApplauseBgm.play();\n\t    this.bg = this.game.add.tileSprite(0, 0, this.game.width, this.game.height, 'titleBackground');\n\t    // this.text = this.game.add.sprite(0, 0, 'titleText');\n\t    // this.text.anchor.set(0.5);\n\t    // this.text.x = this.game.width / 2;\n\t    // this.text.y = this.game.height / 2;\n\t    console.log(\"END CREATE\");\n\t    console.log(this.scores);\n\t    console.log(this.scores[\"player1\"]);\n\t    var printerText = \"\";\n\t    for (var i = 1; i <= this.numPlayers; i++) {\n\t        printerText = printerText.concat(\"Player\"+i+\":  WINS: \"+this.scores[\"player\"+i][\"wins\"]+\" SAUSAGES: \"+this.scores[\"player\"+i][\"sausages\"]+\"\\n\");\n\t    }\n\t\n\t    this.scoreText = this.game.add.text(0, 0, printerText, CONFIG.font.bigStyle);\n\t    this.subtext = this.game.add.text(0, 0, \"GAME OVAH! Again? (y/n)\", CONFIG.font.bigStyle);\n\t    this.subtext.setShadow(3, 3, 'rgba(0,0,0,0.5)', 2);\n\t    this.subtext.setTextBounds(0,0,this.game.width,(this.game.height-40));\n\t\n\t\n\t    this.yButton = this.game.input.keyboard.addKey(Phaser.Keyboard.Y);\n\t    this.yButton.onDown.add(this.new_round, this);\n\t    this.nButton = this.game.input.keyboard.addKey(Phaser.Keyboard.N);\n\t    this.nButton.onDown.add(this.restart, this);\n\t\n\t};\n\t\n\tmodule.exports = EndState;\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// main.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f05d883a857596d4ffaf","'use strict';\n\n/**\n * boot.js\n * Entrypoint of the app. Initializes the main app.\n**/\n\nvar Main = require('./js/main');\n\nwindow.WebFontConfig = {\n    google: {\n        families: [\n            'VT323::latin'\n        ]\n    },\n    active: function() {\n        new Main();\n    }\n};\n\nvar wf = document.createElement('script');\nwf.src = '//ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';\nwf.type = 'text/javascript';\nwf.async = 'true';\nvar s = document.getElementsByTagName('script')[0];\ns.parentNode.insertBefore(wf, s);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./boot.js\n// module id = 0\n// module chunks = 0","'use strict';\n\n/**\n * main.js\n**/\n\nvar CONFIG = require('./config');\n\nvar States = {\n    'Startup': require('./states/startup'),\n    'PlayField': require('./states/playfield'),\n    'TitleState': require('./states/title'),\n    'EndState': require('./states/end')\n};\n\n/**\n * Main app. Little more than a bootstrap - the\n * game logic resides in the various states.\n**/\nfunction Main() {\n    // Create a new game\n    var game = new Phaser.Game(\n        CONFIG.gameSize.width,\n        CONFIG.gameSize.height,\n        Phaser.AUTO\n    );\n\n    for(var k in States) {\n        game.state.add(k, States[k]);\n    }\n\n\n    game.state.start('Startup');\n}\n\nmodule.exports = Main;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 1\n// module chunks = 0","/**\n * config.js\n * Configuration object that gets passed around the app\n * for convenience.\n**/\n\nvar CONFIG = {\n\n    stateAfterStartup: 'TitleState',\n\n    // Pixel size of the Phaser canvas.\n    // (Canvas itself is scaled to viewport)\n    gameSize: {\n        width: 1365,\n        height: 768\n    },\n\n    assetsPath: \"/assets/\",\n\n    // Font style definitions\n    font: {\n        // Generic/default text\n        baseStyle: {\n            font: '24px VT323',\n            fill: '#caa',\n            stroke: '#000',\n            strokeThickness: 1,\n            align: 'center'\n        },\n        bigStyle: {\n            font: '48px VT323',\n            fill: '#caa',\n            stroke: '#000',\n            strokeThickness: 1,\n            boundsAlignH: \"center\",\n            boundsAlignV: \"bottom\"\n        },\n        controlStyle: {\n            font: '48px VT323',\n            fill: '#fff',\n            stroke: '#000',\n            strokeThickness: 1,\n            boundsAlignH: \"center\",\n            boundsAlignV: \"bottom\"\n        },\n\n        smallStyle: {\n            font: '18px VT323',\n            fill: '#c8a',\n            stroke: '#000',\n            strokeThickness: 1,\n            align: 'center'\n        }\n    },\n\n    // Game settings\n    settings: {\n    }\n\n};\n\nmodule.exports = CONFIG;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/config.js\n// module id = 2\n// module chunks = 0","'use strict';\n\n/**\n * startup.js\n * Initial state of the game when loaded.\n * Handles asset preloading, game setup, loader graphic, etc.\n**/\nvar Assets = require('../assets');\nvar CONFIG = require('../config');\nvar _common = require('./_common');\n\nvar StartupState = function() {\n};\n\n\nStartupState.prototype.preload = function() {\n    _common.setGameScale(this.game);\n    var self = this;\n\n    self.loaderText = self.add.text(\n        self.game.width - 40,\n        self.game.height - 40,\n        '...',\n        CONFIG.font.smallStyle);\n    self.loaderText.anchor.setTo(1,1);\n\n    Assets.preload(self, function(progress, cacheKey, success, totalLoaded, totalFiles) {\n        console.log('preload', progress, cacheKey, totalLoaded, totalFiles);\n\n        var updateText = progress.toString() + '% - LOADING...';\n        self.loaderText.setText(updateText);\n    });\n\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n};\n\nStartupState.prototype.create = function() {\n    var self = this;\n    self.game.state.start(CONFIG.stateAfterStartup);\n};\n\nmodule.exports = StartupState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/states/startup.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar CONFIG = require('./config');\n\n/**\n * assets.js\n * List of required project assets and some simple logic\n * for preloading them in Phaser.\n * Used during the Startup state to preload and report on all\n * required assets - we do this upfront to prevent pauses/delays\n * during the game.\n**/\n\n// Object list of assets to preload\nvar assets = {\n\n    // images are standard image files.\n    // Format is [key, path]\n    images: [\n        ['player1', 'images/player1.png'],\n        ['player2', 'images/player2.png'],\n        ['player3', 'images/player3.png'],\n        ['player4', 'images/player4.png'],\n        ['player5', 'images/player5.png'],\n        ['player6', 'images/player6.png'],\n        ['player7', 'images/player7.png'],\n        ['player8', 'images/player8.png'],\n        ['bullet', 'images/bullet1.png'],\n        ['dog-bullet', 'images/dog-bullet.png'],\n        ['space', 'images/deepblue.png'],\n        ['wave', 'images/blue_circle.png'],\n        ['titleText', 'images/titleText.png'],\n        ['titleBackground', 'images/titleBackground.png']\n    ],\n    spritesheets: [\n        ['water', 'spritesheets/water.png', 256, 256]\n    ],\n    // Audio files to load\n    sounds: [\n        ['bgm-applause', ['audio/bgm-applause.mp3',\n                          'audio/bgm-applause.opus']\n        ],\n        ['bgm-playfield', ['audio/bgm-playfield.mp3',\n                           'audio/bgm-playfield.opus']\n        ],\n        ['bgm-title', ['audio/bgm-title.mp3',\n                       'audio/bgm-title.opus']\n        ],\n        ['sfx-bounce', ['audio/sfx-bounce.mp3',\n                        'audio/sfx-bounce.opus']\n        ],\n        ['sfx-sausagehit', ['audio/sfx-sausagehit.mp3',\n                            'audio/sfx-sausagehit.opus']\n        ],\n        ['sfx-sausagethrow', ['audio/sfx-sausagethrow.mp3',\n                              'audio/sfx-sausagethrow.opus']\n        ],\n        ['sfx-select', ['audio/sfx-select.mp3',\n                        'audio/sfx-select.opus']\n        ],\n        ['sfx-slashsoft', ['audio/sfx-slashsoft.mp3',\n                           'audio/sfx-slashsoft.opus']\n        ],\n        ['sfx-splashhard', ['audio/sfx-splashhard.mp3',\n                            'audio/sfx-splashhard.opus']\n        ],\n        ['sfx-startgame', ['audio/sfx-startgame.mp3',\n                           'audio/sfx-startgame.opus']\n        ],\n        ['sfx-washed-last', ['audio/sfx-washed-last.mp3',\n                             'audio/sfx-washed-last.opus']\n        ],\n        ['sfx-washed', ['audio/sfx-washed.mp3',\n                        'audio/sfx-washed.opus']\n        ],\n        ['voice-gameover1', ['audio/voice-gameover1.mp3',\n                             'audio/voice-gameover1.opus']\n        ],\n        ['voice-gameover2', ['audio/voice-gameover2.mp3',\n                             'audio/voice-gameover2.opus']\n        ],\n        ['voice-gameover3', ['audio/voice-gameover3.mp3',\n                             'audio/voice-gameover3.opus']\n        ],\n        ['voice-ohNo', ['audio/voice-ohNo.mp3',\n                        'audio/voice-ohNo.opus']\n        ],\n        ['voice-pleasewait', ['audio/voice-pleasewait.mp3',\n                              'audio/voice-pleasewait.opus']\n        ],\n        ['voice-pleasewait2', ['audio/voice-pleasewait2.mp3',\n                               'audio/voice-pleasewait2.opus']\n        ],\n        ['voice-seeyoulater', ['audio/voice-seeyoulater.mp3',\n                               'audio/voice-seeyoulater.opus']\n        ],\n        ['voice-seeyoulater2', ['audio/voice-seeyoulater2.mp3',\n                                'audio/voice-seeyoulater2.opus']\n        ],\n        ['voice-stupidForeigner', ['audio/voice-stupidForeigner.mp3',\n                                   'audio/voice-stupidForeigner.opus']\n        ],\n        ['voice-sumonami', ['audio/voice-sumonami.mp3',\n                            'audio/voice-sumonami.opus']\n        ],\n        ['voice-sumonami2', ['audio/voice-sumonami2.mp3',\n                             'audio/voice-sumonami2.opus']\n        ],\n        ['voice-sumonami3', ['audio/voice-sumonami3.mp3',\n                             'audio/voice-sumonami3.opus']\n        ],\n        ['voice-sumonami4', ['audio/voice-sumonami4.mp3',\n                             'audio/voice-sumonami4.opus']\n        ]\n    ]\n};\n\n/**\n * Calls Phaser's load functions on the assets list and fires a callback\n * when each one completes.\n * @param game - reference to Phaser.Game instance\n * @param fileLoadedCallback - function to fire when *each* file loads\n**/\nfunction preloadAssets(game, fileLoadedCallback) {\n    game.load.baseURL = CONFIG.assetsPath;\n\n    game.load.onFileComplete.add(fileLoadedCallback, this);\n\n    console.log('Preloading images...');\n    assets.images.forEach(function(item) {\n        game.load.image(item[0], item[1]);\n    });\n\n    console.log('Preloading spritesheets...');\n    assets.spritesheets.forEach(function(item) {\n        game.load.spritesheet(item[0], item[1], item[2], item[3]);\n    });\n\n    console.log('Preloading sounds...');\n    assets.sounds.forEach(function(item) {\n        game.load.audio(item[0], item[1]);\n    });\n\n    game.load.start();\n\n}\n\nmodule.exports = {\n    assets: assets,\n    preload: preloadAssets\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/assets.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n    setGameScale: function(game) {\n        // Ensure the scaling mode of the game is properly set.\n        game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n        game.scale.pageAlignHorizontally = true;\n        game.scale.pageAlignVertically = true;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/states/_common.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nvar CONFIG = require('../config');\nvar _common = require('./_common');\nvar Ship = require('../prefabs/ship');\nvar Ships = require('../prefabs/ships');\n\n\n\nvar PlayfieldState = function() {\n    this.roundEnded = false;\n};\n\nPlayfieldState.prototype.preload = function() {\n    _common.setGameScale(this.game);\n    this.audioPlayBgm = this.game.add.audio('bgm-playfield');\n    this.audioPlayBgm.loopFull();\n    this.audioBounce = this.game.add.audio('sfx-bounce');\n    this.audioSausageHit = this.game.add.audio('sfx-sausagehit');\n    this.audioSausageThrow = this.game.add.audio('sfx-sausagethrow');\n    this.audioSplashSoft = this.game.add.audio('sfx-slashsoft');\n    this.audioSplashHard = this.game.add.audio('sfx-splashhard');\n    this.audioWashedLast = this.game.add.audio('sfx-washed-last');\n    this.audioWashed = this.game.add.audio('sfx-washed');\n};\n\nPlayfieldState.prototype.init = function(numPlayers, curScores) {\n    console.log(\"PLAY FIELD INIT\");\n    this.numPlayers = numPlayers;\n    this.curScores = curScores;\n    this.roundEnded = false;\n    _common.setGameScale(this.game);\n};\n\n\nPlayfieldState.prototype.create = function(game) {\n    this.audioPlayBgm.fadeIn(2000);\n    console.log(\"PLAY FIELD, numPlayers: \"+this.numPlayers);\n    var state = this;\n\n    //  This will run in Canvas mode, so let's gain a little speed and display\n    state.game.renderer.clearBeforeRender = false;\n    state.game.renderer.roundPixels = true;\n\n    //  We need arcade physics\n    state.game.physics.startSystem(Phaser.Physics.ARCADE);\n\n    this.createBackground();\n    this.createPlayers(state.numPlayers);\n\n};\n\nPlayfieldState.prototype.endRound = function() {\n    this.roundEnded = true;\n    this.audioPlayBgm.fadeOut(1800);\n    this.audioWashedLast.play();\n    console.log(\"Round over!\");\n    for (var i = 1; i <= this.ships.children.length; i++) {\n        var checkShip = this.ships.children[(i - 1)];\n        if (checkShip.alive) {\n            console.log(\"player \"+ i + \" won!\");\n            this.curScores[\"player\"+i][\"wins\"] += 1;\n        }\n    }\n    var self = this;\n    this.game.time.events.add(Phaser.Timer.SECOND * 2, function() {\n        self.game.state.start(\"EndState\", true, false, self.numPlayers, self.curScores);\n    });\n\n};\n\nPlayfieldState.prototype.update = function() {\n    var self = this;\n    self.game.physics.arcade.collide(self.ships);\n    if (!self.roundEnded) {\n        if (self.ships.countLiving() == 1 ) {\n            self.endRound();\n        }\n    }\n};\n\nPlayfieldState.prototype.createBackground = function() {\n    var state = this;\n    //  Watery backdrop\n    var water = state.game.add.tileSprite(0, 0, state.game.width, state.game.height, 'water');\n    var ripple = water.animations.add('ripple');\n    water.animations.play('ripple', 6, true);\n};\n\nPlayfieldState.prototype.createPlayers = function(numPlayers) {\n    var state = this;\n    var players = {\n        player1: {\n            control_names: {\n                forward: \"2\",\n                backward:\"Q\",\n                left:\"1\",\n                right:\"W\",\n                fire1:\"F1\",\n                fire2:\"F2\"\n            },\n            initLoc: [350, 200],\n            sprite: 'player1',\n            controls: {\n                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.TWO),\n                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.Q),\n                left: state.game.input.keyboard.addKey(Phaser.Keyboard.ONE),\n                right: state.game.input.keyboard.addKey(Phaser.Keyboard.W),\n                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.F1),\n                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.F2)\n            },\n            image: 'player1'\n        },\n        player2: {\n            control_names: {\n                forward:\"6\",\n                backward:\"T\",\n                left:\"5\",\n                right:\"Y\",\n                fire1:\"9\",\n                fire2:\"0\"\n            },\n            initLoc: [750, 200],\n            sprite: 'player2',\n            controls: {\n                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.SIX),\n                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.T),\n                left: state.game.input.keyboard.addKey(Phaser.Keyboard.FIVE),\n                right: state.game.input.keyboard.addKey(Phaser.Keyboard.Y),\n                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.NINE),\n                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.ZERO)\n            },\n            image: 'player2'\n        },\n        player3: {\n            control_names: {\n                forward:\"S\",\n                backward:\"Z\",\n                left:\"A\",\n                right:\"X\",\n                fire1:\"SHIFT\",\n                fire2:\"Ctrl\"\n            },\n            initLoc: [350, 600],\n            sprite: 'player3',\n            controls: {\n                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.S),\n                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.Z),\n                left: state.game.input.keyboard.addKey(Phaser.Keyboard.A),\n                right: state.game.input.keyboard.addKey(Phaser.Keyboard.X),\n                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.SHIFT),\n                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.CONTROL)\n            },\n            image: 'player3'\n        },\n        player4: {\n            control_names: {\n                forward:\"H\",\n                backward:\"B\",\n                left:\"G\",\n                right:\"N\",\n                fire1:\"_\",\n                fire2:\"=\"\n            },\n            initLoc: [750, 600],\n            sprite: 'player4',\n            controls: {\n                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.H),\n                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.B),\n                left: state.game.input.keyboard.addKey(Phaser.Keyboard.G),\n                right: state.game.input.keyboard.addKey(Phaser.Keyboard.N),\n                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.UNDERSCORE),\n                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.EQUALS)\n            },\n            image: 'player4'\n        },\n        player5: {\n            control_names: {\n                forward:\"4\",\n                backward:\"E\",\n                left:\"3\",\n                right:\"R\",\n                fire1:\"F5\",\n                fire2:\"F6\"\n            },\n            initLoc: [550, 200],\n            sprite: 'player5',\n            controls: {\n                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.FOUR),\n                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.E),\n                left: state.game.input.keyboard.addKey(Phaser.Keyboard.THREE),\n                right: state.game.input.keyboard.addKey(Phaser.Keyboard.R),\n                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.F5),\n                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.F6)\n            },\n            image: 'player5'\n        },\n        player6: {\n            control_names: {\n                forward:\"8\",\n                backward:\"U\",\n                left:\"7\",\n                right:\"I\",\n                fire1:\"O\",\n                fire2:\"P\"\n            },\n            initLoc: [950, 200],\n            sprite: 'player6',\n            controls: {\n                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.EIGHT),\n                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.U),\n                left: state.game.input.keyboard.addKey(Phaser.Keyboard.SEVEN),\n                right: state.game.input.keyboard.addKey(Phaser.Keyboard.I),\n                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.O),\n                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.P)\n            },\n            image: 'player6'\n        },\n        player7: {\n            control_names: {\n                forward:\"F\",\n                backward:\"C\",\n                left:\"D\",\n                right:\"V\",\n                fire1:\"F7\",\n                fire2:\"F8\"\n            },\n            initLoc: [550, 600],\n            sprite: 'player7',\n            controls: {\n                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.F),\n                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.C),\n                left: state.game.input.keyboard.addKey(Phaser.Keyboard.D),\n                right: state.game.input.keyboard.addKey(Phaser.Keyboard.V),\n                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.F7),\n                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.F8)\n            },\n            image: 'player7'\n        },\n        player8: {\n            control_names: {\n                forward:\"K\",\n                backward:\"M\",\n                left:\"J\",\n                right:\",\",\n                fire1:\"{\",\n                fire2:\"}\"\n            },\n            initLoc: [950, 600],\n            sprite: 'player8',\n            controls: {\n                forward: state.game.input.keyboard.addKey(Phaser.Keyboard.K),\n                backward: state.game.input.keyboard.addKey(Phaser.Keyboard.M),\n                left: state.game.input.keyboard.addKey(Phaser.Keyboard.J),\n                right: state.game.input.keyboard.addKey(Phaser.Keyboard.COMMA),\n                fire1: state.game.input.keyboard.addKey(Phaser.Keyboard.OPEN_BRACKET),\n                fire2: state.game.input.keyboard.addKey(Phaser.Keyboard.CLOSED_BRACKET)\n            },\n            image: 'player8'\n        }\n    };\n\n    state.ships = new Ships(state);\n    if (numPlayers > 4) numPlayers == 4;\n    for (var i = 1; i <= numPlayers; i++) {\n        state.ships.add(new Ship(state, players[\"player\" + i]));\n        console.log(\"player\" + i + \"created\");\n    }\n\n    state.game.physics.enable(state.ships, Phaser.Physics.ARCADE);\n};\n\nmodule.exports = PlayfieldState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/states/playfield.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nvar CONFIG = require('../config');\n\nvar Ship = function(state, playerinfo) {\n    var x = playerinfo.initLoc[0];\n    var y = playerinfo.initLoc[1];\n    var controls = playerinfo.controls;\n    var image = playerinfo.image;\n    this.state = state;\n\n    // instantiate object\n    Phaser.Sprite.call(this, state.game, x, y, image);\n    // constants\n    this.x = x;\n    this.y = y;\n    var helptext = (this.key + \"\\n\"\n                    + playerinfo.control_names.forward + \" \"\n                    + playerinfo.control_names.backward + \" \"\n                    + playerinfo.control_names.left + \" \"\n                    + playerinfo.control_names.right + \"\\n\"\n                    + playerinfo.control_names.fire1 + \" \"\n                    + playerinfo.control_names.fire2);\n\n    console.log(helptext);\n    this.helptext = this.game.add.text(x,y,helptext, CONFIG.font.controlStyle);\n    this.game.add.tween(this.helptext).to({ alpha: 0.0  }, 6000, Phaser.Easing.Linear.In).start();\n    console.log(this);\n\n    this.controls = controls;\n    this.anchor.set(0.5);\n\n    //physics\n    state.game.physics.enable(this, Phaser.Physics.ARCADE);\n    this.enableBody = true;\n    this.body.drag.set(100);\n    this.body.maxVelocity.set(800);\n    // this.body.collideWorldBounds=true;\n    // this.body.bounce.y=0.2;\n    // this.body.bounce.x=0.2;\n    // this.repel_scaling_factor=0.8;\n    this.repel_max_range=300;\n    this.repel_initial_vel=350;\n\n    // Rate of acceleration on keypress, don't confuse with this.body.acceleration!\n    this.acceleration_increment=40;\n\n    // TODO: move to Ship.addWaves?\n    // Add before the ship so they're under the sprite\n    this.waveTime = 0;\n    this.waves = this.game.add.group();\n    this.waves.enableBody = true;\n    this.waves.physicsBodyType = Phaser.Physics.ARCADE;\n    this.waves.createMultiple(3, 'wave');\n    this.waves.setAll('anchor.x', 0.5);\n    this.waves.setAll('anchor.y', 0.5);\n\n    // add to canvas and log\n    state.game.add.existing(this);\n\n    this.bulletTime = 0;\n    this.bullets = this.game.add.group();\n    this.bullets.enableBody = true;\n    this.bullets.physicsBodyType = Phaser.Physics.ARCADE;\n    this.bullets.createMultiple(2, 'dog-bullet');\n    this.bullets.setAll('anchor.x', 0.5);\n    this.bullets.setAll('anchor.y', 0.5);\n\n    //Collision stuff\n    this.checkWorldBounds = true;\n    this.outOfBoundsKill = true;\n    this.body.mass = 100;\n    this.body.bounce.set(1);\n    this.body.stopVelocityOnCollide = true;\n\n    console.log(this.bounce);\n\n};\n\nShip.prototype = Object.create(Phaser.Sprite.prototype);\n\nShip.prototype.constructor = Ship;\n\nShip.prototype.update = function() {\n    this.speed = 10;\n    if (this.controls.forward.isDown) {\n        this.body.velocity.y -= this.speed;\n        this.angle = 180;\n    } else if (this.controls.backward.isDown) {\n        this.body.velocity.y += this.speed;\n        this.angle = 360;\n    } else\n    { this.body.acceleration.set(0); }\n\n    if (this.controls.left.isDown) {\n        this.body.velocity.x -= this.speed;\n        this.angle = 90;\n    }\n    else if (this.controls.right.isDown) {\n        this.body.velocity.x += this.speed;\n        this.angle = 270;\n    }\n    this.controls.fire1.onDown.add(this.fireBullet, this);\n    this.controls.fire2.onDown.add(this.fireWave, this);\n\n    // Dog spin\n    this.bullets.setAll('angle', 10, false, false, 1);\n    // Make first spin faster for the lulz\n    var wee = this.bullets.getFirstAlive();\n    if (wee) wee.angle += 10;\n\n    this.waves.forEachExists(this.scaleSprite, this, 0.05);\n};\n\nShip.prototype.fireBullet = function () {\n    if (this.alive) {\n        if (this.game.time.now > this.bulletTime)\n        {\n            this.bullet = this.bullets.getFirstExists(false);\n\n            if (this.bullet)\n            {\n                this.bullet.scale.setTo(0.3);\n                this.bullet.reset(this.body.x + 16, this.body.y + 16);\n                this.bullet.lifespan = 2000;\n                this.bullet.angle = this.angle + 90;\n                this.game.physics.arcade.velocityFromAngle(this.bullet.angle, 400, this.bullet.body.velocity);\n                this.bulletTime = this.game.time.now + 50;\n                this.state.curScores[this.key][\"sausages\"] += 1;\n            }\n        }\n    }\n};\n\nShip.prototype.fireWave = function() {\n    if (this.alive) {\n        if (this.game.time.now > this.waveTime) {\n            var wave = this.waves.getFirstExists(false);\n\n            if (wave)\n            {\n                wave.rotation = this.rotation;\n                this.game.physics.arcade.velocityFromRotation(0, 0, 0);\n                this.waveTime = this.game.time.now + 50;\n\n                wave.reset(this.body.x + this.body.width/2, this.body.y + this.body.height/2);\n                wave.scale.setTo(0.1);\n                wave.alpha = 1;\n                wave.lifespan = 2000;\n                wave.rotation = this.rotation;\n                this.game.physics.arcade.velocityFromRotation(0, 0, 0);\n                //The number is the delay between shots\n                this.waveTime = this.game.time.now + 200;\n\n                this.parent.forEachExists(this.repelShip, this);\n                this.game.add.tween(this.scale)\n                    .to({x: 0.8, y:0.8}, 200, Phaser.Easing.Linear.In)\n                    .to({x: 1.2, y:1.2}, 200, Phaser.Easing.Linear.In)\n                    .to({x: 1.0, y:1.0}, 200, Phaser.Easing.Linear.In)\n                    .start();\n            }\n        }\n    }\n};\n\nShip.prototype.repelShip = function (ship) {\n    var dist = this.game.physics.arcade.distanceBetween(ship, this);\n    var ang = this.game.physics.arcade.angleBetween(ship, this);\n\n    if (dist < this.repel_max_range && dist != 0)\n    {\n        var scaling_factor = ( (this.repel_max_range - dist) / this.repel_max_range);\n        console.log(\"dist:\"+dist+\", factor:\"+scaling_factor+\", scaled:\"+scaled_velocity);\n\n        var scaled_velocity = (-1 * this.repel_initial_vel * scaling_factor); // scale down\n        ship.game.physics.arcade.velocityFromRotation(ang, scaled_velocity, ship.body.velocity);\n    }\n    else {\n        console.log(\"out of range!\");\n    }\n};\n\nShip.prototype.render = function (){\n}\n\nShip.prototype.scaleSprite = function (sprite, increment){\n        sprite.scale.setTo(sprite.scale.x + increment);\n        sprite.alpha -= 0.01;\n    };\n\n\nmodule.exports = Ship;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/prefabs/ship.js\n// module id = 7\n// module chunks = 0","\n'use strict';\n\nvar Ships = function (state) {\n    Phaser.Group.call(this, state.game);\n};\n\n//Documentation for Phaser's (2.6.2) group:: phaser.io/docs/2.6.2/Phaser.Group.html\nShips.prototype = Object.create(Phaser.Group.prototype);\n\n// prefab initialization and construction\nShips.prototype.constructor = Ships;\n\n// Update needed, called automatically by phaser as it's a child of the state.\nShips.prototype.update = function() {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n        this.children[i].update();\n    }\n};\n\nmodule.exports = Ships;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/prefabs/ships.js\n// module id = 8\n// module chunks = 0","/**\n * title.js\n * State for the game title screen.\n**/\n'use strict';\nvar CONFIG = require('../config');\nvar _common = require('./_common');\n\nvar TitleState = function() {};\n\nTitleState.prototype.preload = function() {\n    _common.setGameScale(this.game);\n    this.audioBgm = this.game.add.audio('bgm-title');\n    this.audioTitle = this.game.add.audio('voice-sumonami');\n    this.audioSelect = this.game.add.audio('sfx-select');\n    this.audioStart = this.game.add.audio('sfx-startgame');\n};\n\nTitleState.prototype.create = function() {\n    var state = this;\n\n    this.bg = this.game.add.tileSprite(0, 0, this.game.width, this.game.height, 'titleBackground');\n    this.text = this.game.add.sprite(0, 0, 'titleText');\n    this.text.anchor.set(0.5);\n    this.text.x = this.game.width / 2;\n    this.text.y = this.game.height / 2;\n    this.startButton = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n    this.startButton.onDown.add(this.getPlayerCount, this);\n\n    this.audioTitle.play();\n    this.audioBgm.play();\n\n    this.subtext = this.game.add.text(0, 0, \"CHALLENGER PRESSES SPACEBAH!!\", CONFIG.font.bigStyle);\n    this.subtext.setShadow(3, 3, 'rgba(0,0,0,0.5)', 2);\n    this.subtext.setTextBounds(0,0,this.game.width,(this.game.height-40));\n\n    this.text.filters = [ this.game.add.filter('Glow')  ];\n\n    this.game.add.tween(this.text)\n            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 0.1  }, 2000, Phaser.Easing.Linear.In)\n            .to({ alpha: 1.0  }, 2000, Phaser.Easing.Linear.In)\n            .start();\n\n    // function sleep(ms) {\n    //       return new Promise(resolve => setTimeout(resolve, ms));\n    // }\n\n    // for (var i = 0; i < 100; i++) {\n    //     //await sleep(2000);\n    //     //this.text.body.x = i;\n    // }\n\n};\nTitleState.prototype.getPlayerCount = function () {\n\n    this.audioSelect.play();\n\n    this.subtext.setText(\"How many players (2-8)?\");\n    this.twoButton = this.game.input.keyboard.addKey(Phaser.Keyboard.TWO);\n    this.twoButton.onDown.add(this.setNumPlayers, this, this, 2);\n    this.threeButton = this.game.input.keyboard.addKey(Phaser.Keyboard.THREE);\n    this.threeButton.onDown.add(this.setNumPlayers, this, this, 3);\n    this.fourButton = this.game.input.keyboard.addKey(Phaser.Keyboard.FOUR);\n    this.fourButton.onDown.add(this.setNumPlayers, this, this, 4);\n    this.fiveButton = this.game.input.keyboard.addKey(Phaser.Keyboard.FIVE);\n    this.fiveButton.onDown.add(this.setNumPlayers, this, this, 5);\n    this.sixButton = this.game.input.keyboard.addKey(Phaser.Keyboard.SIX);\n    this.sixButton.onDown.add(this.setNumPlayers, this, this, 6);\n    this.sevenButton = this.game.input.keyboard.addKey(Phaser.Keyboard.SEVEN);\n    this.sevenButton.onDown.add(this.setNumPlayers, this, this, 7);\n    this.eightButton = this.game.input.keyboard.addKey(Phaser.Keyboard.EIGHT);\n    this.eightButton.onDown.add(this.setNumPlayers, this, this, 8);\n};\n\nTitleState.prototype.setNumPlayers = function (state, number) {\n    console.log(\"setNumPlayers:\"+number+\" pressed!\");\n    var  initTotals= {\n        player1: {\n            wins: 0,\n            sausages: 0,\n        },\n        player2: {\n            wins: 0,\n            sausages: 0,\n        },\n        player3: {\n            wins: 0,\n            sausages: 0,\n        },\n        player4: {\n            wins: 0,\n            sausages: 0,\n        },\n        player5: {\n            wins: 0,\n            sausages: 0,\n        },\n        player6: {\n            wins: 0,\n            sausages: 0,\n        },\n        player7: {\n            wins: 0,\n            sausages: 0,\n        },\n        player8: {\n            wins: 0,\n            sausages: 0,\n        }\n    };\n\n    this.audioBgm.stop();\n    this.audioStart.play();\n    var self = this;\n    this.game.time.events.add(Phaser.Timer.SECOND * 2, function() {\n        self.state.start(\"PlayField\", true, false, number, initTotals);\n    });\n};\n\nPhaser.Filter.Glow = function (game) {\n        Phaser.Filter.call(this, game);\n\n    this.fragmentSrc = [\n                \"precision lowp float;\",\n                \"varying vec2 vTextureCoord;\",\n                \"varying vec4 vColor;\",\n                'uniform sampler2D uSampler;',\n\n                'void main() {',\n                    'vec4 sum = vec4(0);',\n                    'vec2 texcoord = vTextureCoord;',\n                    'for(int xx = -4; xx <= 4; xx++) {',\n                        'for(int yy = -3; yy <= 3; yy++) {',\n                            'float dist = sqrt(float(xx*xx) + float(yy*yy));',\n                            'float factor = 0.0;',\n                            'if (dist == 0.0) {',\n                                'factor = 2.0;',\n                            '} else {',\n                                'factor = 2.0/abs(float(dist));',\n                            '}',\n                            'sum += texture2D(uSampler, texcoord + vec2(xx, yy) * 0.002) * factor;',\n                        '}',\n                    '}',\n                    'gl_FragColor = sum * 0.025 + texture2D(uSampler, texcoord);',\n                '}'\n\n    ];\n\n};\n\nPhaser.Filter.Glow.prototype = Object.create(Phaser.Filter.prototype);\nPhaser.Filter.Glow.prototype.constructor = Phaser.Filter.Glow;\n\n\n\nmodule.exports = TitleState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/states/title.js\n// module id = 9\n// module chunks = 0","/**\n * end.js\n * State for the game end screen.\n**/\n'use strict';\nvar CONFIG = require('../config');\nvar _common = require('./_common');\n\nvar EndState = function() {};\n\nEndState.prototype.init = function(numPlayers, scores) {\n    console.log(\"END INIT\");\n    this.numPlayers = numPlayers;\n    this.scores = scores;\n    console.log(this);\n\n}\n\nEndState.prototype.preload = function() {\n    _common.setGameScale(this.game);\n    this.audioApplauseBgm = this.game.add.audio('bgm-applause');\n};\nEndState.prototype.new_round = function() {\n    console.log(\"NEW ROUND\");\n    this.state.start(\"PlayField\", true, false, this.numPlayers, this.scores);\n\n};\n\nEndState.prototype.restart = function(state, numPlayers) {\n\n    this.state.start(\"TitleState\", true, false );\n\n};\n\nEndState.prototype.create = function() {\n    this.audioApplauseBgm.play();\n    this.bg = this.game.add.tileSprite(0, 0, this.game.width, this.game.height, 'titleBackground');\n    // this.text = this.game.add.sprite(0, 0, 'titleText');\n    // this.text.anchor.set(0.5);\n    // this.text.x = this.game.width / 2;\n    // this.text.y = this.game.height / 2;\n    console.log(\"END CREATE\");\n    console.log(this.scores);\n    console.log(this.scores[\"player1\"]);\n    var printerText = \"\";\n    for (var i = 1; i <= this.numPlayers; i++) {\n        printerText = printerText.concat(\"Player\"+i+\":  WINS: \"+this.scores[\"player\"+i][\"wins\"]+\" SAUSAGES: \"+this.scores[\"player\"+i][\"sausages\"]+\"\\n\");\n    }\n\n    this.scoreText = this.game.add.text(0, 0, printerText, CONFIG.font.bigStyle);\n    this.subtext = this.game.add.text(0, 0, \"GAME OVAH! Again? (y/n)\", CONFIG.font.bigStyle);\n    this.subtext.setShadow(3, 3, 'rgba(0,0,0,0.5)', 2);\n    this.subtext.setTextBounds(0,0,this.game.width,(this.game.height-40));\n\n\n    this.yButton = this.game.input.keyboard.addKey(Phaser.Keyboard.Y);\n    this.yButton.onDown.add(this.new_round, this);\n    this.nButton = this.game.input.keyboard.addKey(Phaser.Keyboard.N);\n    this.nButton.onDown.add(this.restart, this);\n\n};\n\nmodule.exports = EndState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/states/end.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}